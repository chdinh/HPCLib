//=============================================================================================================
/**
* @file     cuhpcvalue.cu
* @author   Christoph Dinh <christoph.dinh@live.de>;
* @version  1.0
* @date     March, 2011
*
* @section  LICENSE
*
* Copyright (C) 2011 Christoph Dinh. All rights reserved.
*
* No part of this program may be photocopied, reproduced,
* or translated to another program language without the
* prior written consent of the author.
*
*
* @brief    ToDo Documentation...
*
*/

#ifndef CUHPCVALUE_SOURCES //Because this cpp is part of the header -> template
#define CUHPCVALUE_SOURCES

//*************************************************************************************************************
//=============================================================================================================
// INCLUDES
//=============================================================================================================

#include "../include/cuhpcvalue.cuh"


//*************************************************************************************************************
//=============================================================================================================
// STL INCLUDES
//=============================================================================================================


//*************************************************************************************************************
//=============================================================================================================
// DEFINE NAMESPACE HPCLib
//=============================================================================================================

namespace HPCLib
{


//*************************************************************************************************************
//=============================================================================================================
// USED NAMESPACES
//=============================================================================================================


//*************************************************************************************************************
//=============================================================================================================
// DEFINE MEMBER METHODS
//=============================================================================================================

template <class T>
cuHPCValue<T>::cuHPCValue(T p_Val)
: m_dev_pValue(NULL)
, m_bCreated(false)
{
    init();

    //Set device to identity
    HANDLE_ERROR( cudaMemcpy(   m_dev_pValue,
                                &p_Val,
                                sizeof(T),
                                cudaMemcpyHostToDevice ) );
}


//*************************************************************************************************************

template <class T>
cuHPCValue<T>::~cuHPCValue()
{
    clean();
}


//*************************************************************************************************************

template <class T>
void cuHPCValue<T>::clean()
{
    if(m_dev_pValue != NULL && m_bCreated)
    {
        HANDLE_ERROR( cudaFree( m_dev_pValue ) );
        m_dev_pValue = NULL;
    }

    m_bCreated = false;
}


//*************************************************************************************************************

template <class T>
std::ostream& cuHPCValue<T>::print(std::ostream& os)
{
    T t_Val = HPCLib::toHostValue(*this);

    os <<  std::setw(2) << t_Val;
    os << '\n';

        return os;
}


}//Namespace

#endif //CUHPCVALUE_SOURCES